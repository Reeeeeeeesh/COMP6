"""Initial migration

Revision ID: 3a8e4756a9c4
Revises: 
Create Date: 2025-05-23 15:08:02.767935

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3a8e4756a9c4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('import_templates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('column_mapping', sa.JSON(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_import_templates_id'), 'import_templates', ['id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_table('batch_scenarios',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batch_scenarios_id'), 'batch_scenarios', ['id'], unique=False)
    op.create_table('batch_uploads',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('total_rows', sa.Integer(), nullable=True),
    sa.Column('processed_rows', sa.Integer(), nullable=True),
    sa.Column('failed_rows', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batch_uploads_id'), 'batch_uploads', ['id'], unique=False)
    op.create_table('batch_calculation_results',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('batch_upload_id', sa.String(), nullable=False),
    sa.Column('scenario_id', sa.String(), nullable=True),
    sa.Column('total_employees', sa.Integer(), nullable=False),
    sa.Column('total_base_salary', sa.Float(), nullable=False),
    sa.Column('total_bonus_amount', sa.Float(), nullable=False),
    sa.Column('average_bonus_percentage', sa.Float(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.Column('calculation_parameters', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['batch_upload_id'], ['batch_uploads.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['batch_scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batch_calculation_results_id'), 'batch_calculation_results', ['id'], unique=False)
    op.create_table('employee_data',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('batch_upload_id', sa.String(), nullable=False),
    sa.Column('row_number', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('salary', sa.Float(), nullable=True),
    sa.Column('hire_date', sa.DateTime(), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['batch_upload_id'], ['batch_uploads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_data_id'), 'employee_data', ['id'], unique=False)
    op.create_table('scenario_audit_log',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('scenario_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['scenario_id'], ['batch_scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scenario_audit_log_id'), 'scenario_audit_log', ['id'], unique=False)
    op.create_table('employee_calculation_results',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('employee_data_id', sa.String(), nullable=False),
    sa.Column('batch_result_id', sa.String(), nullable=False),
    sa.Column('base_salary', sa.Float(), nullable=False),
    sa.Column('bonus_percentage', sa.Float(), nullable=False),
    sa.Column('bonus_amount', sa.Float(), nullable=False),
    sa.Column('total_compensation', sa.Float(), nullable=False),
    sa.Column('calculation_breakdown', sa.JSON(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['batch_result_id'], ['batch_calculation_results.id'], ),
    sa.ForeignKeyConstraint(['employee_data_id'], ['employee_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_calculation_results_id'), 'employee_calculation_results', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_employee_calculation_results_id'), table_name='employee_calculation_results')
    op.drop_table('employee_calculation_results')
    op.drop_index(op.f('ix_scenario_audit_log_id'), table_name='scenario_audit_log')
    op.drop_table('scenario_audit_log')
    op.drop_index(op.f('ix_employee_data_id'), table_name='employee_data')
    op.drop_table('employee_data')
    op.drop_index(op.f('ix_batch_calculation_results_id'), table_name='batch_calculation_results')
    op.drop_table('batch_calculation_results')
    op.drop_index(op.f('ix_batch_uploads_id'), table_name='batch_uploads')
    op.drop_table('batch_uploads')
    op.drop_index(op.f('ix_batch_scenarios_id'), table_name='batch_scenarios')
    op.drop_table('batch_scenarios')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_import_templates_id'), table_name='import_templates')
    op.drop_table('import_templates')
    # ### end Alembic commands ###
